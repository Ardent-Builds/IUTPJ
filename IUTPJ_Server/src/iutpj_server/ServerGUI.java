/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iutpj_server;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.Element;

/**
 *
 * @author KAWSAR
 */
public class ServerGUI extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    private Server server;
    private Thread service;
    private Document document;
    private DocumentListener limitLinesListener;
    ByteArrayOutputStream byteArrayOut;

    public ServerGUI() {
        initComponents();
        server = null;
        service = null;
        document = consoleTextArea.getDocument();
        limitLinesListener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                SwingUtilities.invokeLater(() -> {
                    Document document = e.getDocument();
                    Element root = document.getDefaultRootElement();
                    while (root.getElementCount() > 200) {
                        int end = root.getElement(0).getEndOffset();
                        try {
                            document.remove(0, end);
                        } catch (BadLocationException ble) {
                            System.out.println(ble);
                        }
                    }
                });
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        };
        document.addDocumentListener(limitLinesListener);
        byteArrayOut = new ByteArrayOutputStream() {
            @Override
            public void flush() {
                String message = toString();

                if (message.length() == 0) {
                    return;
                }
                try {
                    document.insertString(document.getLength(), message, null);
                    consoleTextArea.setCaretPosition(document.getLength());
                } catch (BadLocationException ex) {
                    Logger.getLogger(ServerGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                reset();
            }
        };
        System.setOut(new PrintStream(byteArrayOut, true));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LeftPanel = new javax.swing.JPanel();
        logoLabel = new javax.swing.JLabel();
        RightPanel = new javax.swing.JPanel();
        WelcomeLabel = new javax.swing.JLabel();
        closeLabel = new javax.swing.JLabel();
        minimizeLabel = new javax.swing.JLabel();
        PortLabel = new javax.swing.JLabel();
        txtPort = new javax.swing.JTextField();
        Start = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        consoleTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LeftPanel.setBackground(new java.awt.Color(54, 33, 89));
        LeftPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/newlogo.png"))); // NOI18N
        LeftPanel.add(logoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 190, 170));

        getContentPane().add(LeftPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 560));

        RightPanel.setBackground(new java.awt.Color(255, 255, 255));
        RightPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        WelcomeLabel.setFont(new java.awt.Font("Segoe UI Emoji", 1, 24)); // NOI18N
        WelcomeLabel.setForeground(new java.awt.Color(54, 33, 89));
        WelcomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        WelcomeLabel.setText("Server ");
        RightPanel.add(WelcomeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 220, 30));

        closeLabel.setFont(new java.awt.Font("Tahoma", 1, 25)); // NOI18N
        closeLabel.setForeground(new java.awt.Color(54, 33, 89));
        closeLabel.setText("x");
        closeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeLabelMouseClicked(evt);
            }
        });
        RightPanel.add(closeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 30, 20));

        minimizeLabel.setFont(new java.awt.Font("Tahoma", 1, 25)); // NOI18N
        minimizeLabel.setForeground(new java.awt.Color(54, 33, 89));
        minimizeLabel.setText("_");
        minimizeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeLabelMouseClicked(evt);
            }
        });
        RightPanel.add(minimizeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, -10, 30, 40));

        PortLabel.setFont(new java.awt.Font("Segoe UI Emoji", 1, 19)); // NOI18N
        PortLabel.setForeground(new java.awt.Color(54, 33, 89));
        PortLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PortLabel.setText("Port:");
        PortLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        RightPanel.add(PortLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 60, 30));

        txtPort.setFont(new java.awt.Font("Segoe UI Light", 1, 15)); // NOI18N
        txtPort.setForeground(new java.awt.Color(102, 102, 102));
        txtPort.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPort.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));
        txtPort.setSelectionColor(new java.awt.Color(110, 89, 222));
        RightPanel.add(txtPort, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 260, 30));

        Start.setBackground(new java.awt.Color(54, 33, 89));
        Start.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        Start.setForeground(new java.awt.Color(54, 33, 89));
        Start.setText("Start");
        Start.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        Start.setContentAreaFilled(false);
        Start.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Start.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartButtonActionPerformed(evt);
            }
        });
        RightPanel.add(Start, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 50, 70, 30));

        stopButton.setBackground(new java.awt.Color(54, 33, 89));
        stopButton.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        stopButton.setForeground(new java.awt.Color(54, 33, 89));
        stopButton.setText("Stop");
        stopButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        stopButton.setContentAreaFilled(false);
        stopButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        stopButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonButtonActionPerformed(evt);
            }
        });
        RightPanel.add(stopButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, 70, 30));

        consoleTextArea.setEditable(false);
        consoleTextArea.setBackground(new java.awt.Color(0, 0, 0));
        consoleTextArea.setColumns(20);
        consoleTextArea.setForeground(new java.awt.Color(0, 255, 51));
        consoleTextArea.setRows(5);
        consoleTextArea.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jScrollPane1.setViewportView(consoleTextArea);

        jScrollPane2.setViewportView(jScrollPane1);

        RightPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 500, 460));

        getContentPane().add(RightPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 0, 520, 550));

        setSize(new java.awt.Dimension(954, 556));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    void startGUI() {
        this.setVisible(true);
        ProcessBuilder pb = new ProcessBuilder("g++", "--version");
        try {
            pb.start();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "g++ Compiler path not Found, Err:" + ex.getMessage(), "Compiler Error", JOptionPane.ERROR_MESSAGE);
        }
        pb.command("Javac", "--version");
        try {
            pb.start();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Java Compiler path not Found, Err:" + ex.getMessage(), "Compiler Error", JOptionPane.ERROR_MESSAGE);
        }

    }
    private void closeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeLabelMouseClicked
        if (service != null) {
            server.stopServer();
        }
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_closeLabelMouseClicked

    private void minimizeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeLabelMouseClicked
        this.setExtendedState(JFrame.ICONIFIED);      // TODO add your handling code here:
    }//GEN-LAST:event_minimizeLabelMouseClicked
    static int xx, yy;
    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        xx = evt.getX();
        yy = evt.getY();// TODO add your handling code here:
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        int x, y;
        x = evt.getXOnScreen();
        y = evt.getYOnScreen();
        this.setLocation(x - xx, y - yy);// TODO add your handling code here:
    }//GEN-LAST:event_formMouseDragged

    private void StartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartButtonActionPerformed
        int port;
        try {
            port = Integer.parseInt(txtPort.getText());
            txtPort.setEditable(false);
        } catch (NumberFormatException e) {
            port = 0;
            System.err.println("Port Error: "+e.getMessage());
        }

        server = new Server(port);
        service = new Thread(server);
        service.start();
    }//GEN-LAST:event_StartButtonActionPerformed

    private void stopButtonButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonButtonActionPerformed
        if (service != null) {
            server.stopServer();
        }
        txtPort.setEditable(true);
    }//GEN-LAST:event_stopButtonButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel LeftPanel;
    private javax.swing.JLabel PortLabel;
    private javax.swing.JPanel RightPanel;
    private javax.swing.JButton Start;
    private javax.swing.JLabel WelcomeLabel;
    private javax.swing.JLabel closeLabel;
    private javax.swing.JTextArea consoleTextArea;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JLabel minimizeLabel;
    private javax.swing.JButton stopButton;
    private javax.swing.JTextField txtPort;
    // End of variables declaration//GEN-END:variables

}
